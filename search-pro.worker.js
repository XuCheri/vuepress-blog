const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":69,\"nextId\":69,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2#heading-2\",\"3\":\"2#heading-3\",\"4\":\"2@0\",\"5\":\"2@1\",\"6\":\"3\",\"7\":\"3#heading-2\",\"8\":\"3#heading-3\",\"9\":\"3@0\",\"10\":\"3@1\",\"11\":\"4\",\"12\":\"4#heading-2\",\"13\":\"4#heading-3\",\"14\":\"4@0\",\"15\":\"4@1\",\"16\":\"5\",\"17\":\"5#heading-2\",\"18\":\"5#heading-3\",\"19\":\"5@0\",\"20\":\"5@1\",\"21\":\"8\",\"22\":\"8#heading-2\",\"23\":\"8#heading-3\",\"24\":\"8@0\",\"25\":\"8@1\",\"26\":\"9\",\"27\":\"9#heading-2\",\"28\":\"9#heading-3\",\"29\":\"9@0\",\"30\":\"9@1\",\"31\":\"10\",\"32\":\"10#heading-2\",\"33\":\"10#heading-3\",\"34\":\"10@0\",\"35\":\"10@1\",\"36\":\"11\",\"37\":\"11#heading-2\",\"38\":\"11#heading-3\",\"39\":\"11@0\",\"40\":\"11@1\",\"41\":\"12\",\"42\":\"12#heading-2\",\"43\":\"12#heading-3\",\"44\":\"12@0\",\"45\":\"12@1\",\"46\":\"13\",\"47\":\"13#heading-2\",\"48\":\"13#heading-3\",\"49\":\"13@0\",\"50\":\"13@1\",\"51\":\"14\",\"52\":\"14#heading-2\",\"53\":\"14#heading-3\",\"54\":\"14@0\",\"55\":\"14@1\",\"56\":\"15\",\"57\":\"15#heading-2\",\"58\":\"15#heading-3\",\"59\":\"15@0\",\"60\":\"15@1\",\"61\":\"35\",\"62\":\"36\",\"63\":\"37\",\"64\":\"38\",\"65\":\"39\",\"66\":\"40\",\"67\":\"41\",\"68\":\"42\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,7],\"1\":[1],\"2\":[2,5],\"3\":[2,5],\"4\":[null,null,1],\"5\":[null,null,3],\"6\":[2],\"7\":[2,5],\"8\":[2,5],\"9\":[null,null,2],\"10\":[null,null,2],\"11\":[1],\"12\":[2,5],\"13\":[2,5],\"14\":[null,null,2],\"15\":[null,null,2],\"16\":[1],\"17\":[2,5],\"18\":[2,5],\"19\":[null,null,1],\"20\":[null,null,2],\"21\":[2],\"22\":[2,5],\"23\":[2,5],\"24\":[null,null,1],\"25\":[null,null,3],\"26\":[2,6],\"27\":[2,5],\"28\":[2,5],\"29\":[null,null,1],\"30\":[null,null,3],\"31\":[2],\"32\":[2,5],\"33\":[2,5],\"34\":[null,null,2],\"35\":[null,null,3],\"36\":[2],\"37\":[2,5],\"38\":[2,5],\"39\":[null,null,2],\"40\":[null,null,3],\"41\":[2],\"42\":[2,5],\"43\":[2,5],\"44\":[null,null,2],\"45\":[null,null,3],\"46\":[2,9],\"47\":[2,5],\"48\":[2,5],\"49\":[null,null,2],\"50\":[null,null,3],\"51\":[2],\"52\":[2,5],\"53\":[2,5],\"54\":[null,null,1],\"55\":[null,null,3],\"56\":[2],\"57\":[2,5],\"58\":[2,5],\"59\":[null,null,1],\"60\":[null,null,3],\"61\":[1,3],\"62\":[1],\"63\":[1],\"64\":[1],\"65\":[1],\"66\":[1],\"67\":[1],\"68\":[1]},\"averageFieldLength\":[1.7819623083356069,5.426743755292301,1.475394734913087],\"storedFields\":{\"0\":{\"h\":\"Intro Page\",\"t\":[\"Place your introduction and profile here.\"]},\"1\":{\"h\":\"Cherry\"},\"2\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"3\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"4\":{\"c\":[\"Cherry\"]},\"5\":{\"c\":[\"red\",\"small\",\"round\"]},\"6\":{\"h\":\"Dragon Fruit\"},\"7\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"8\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"9\":{\"c\":[\"Dragon Fruit\",\"Fruit\"]},\"10\":{\"c\":[\"red\",\"big\"]},\"11\":{\"h\":\"Strawberry\"},\"12\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"13\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"14\":{\"c\":[\"Fruit\",\"Strawberry\"]},\"15\":{\"c\":[\"red\",\"small\"]},\"16\":{\"h\":\"Tomato\"},\"17\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"18\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"19\":{\"c\":[\"Vegetable\"]},\"20\":{\"c\":[\"red\",\"round\"]},\"21\":{\"h\":\"Apple 1\"},\"22\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"23\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"24\":{\"c\":[\"Apple\"]},\"25\":{\"c\":[\"red\",\"big\",\"round\"]},\"26\":{\"h\":\"Apple 2\",\"t\":[\"A apple article being stared.\"]},\"27\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"28\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"29\":{\"c\":[\"Apple\"]},\"30\":{\"c\":[\"red\",\"big\",\"round\"]},\"31\":{\"h\":\"Apple 3\"},\"32\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"33\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"34\":{\"c\":[\"Apple\",\"Fruit\"]},\"35\":{\"c\":[\"red\",\"big\",\"round\"]},\"36\":{\"h\":\"Apple 4\"},\"37\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"38\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"39\":{\"c\":[\"Apple\",\"Fruit\"]},\"40\":{\"c\":[\"red\",\"big\",\"round\"]},\"41\":{\"h\":\"Banana 1\"},\"42\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"43\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"44\":{\"c\":[\"Banana\",\"Fruit\"]},\"45\":{\"c\":[\"yellow\",\"curly\",\"long\"]},\"46\":{\"h\":\"Banana 2\",\"t\":[\"A banana article being stared with number 10.\"]},\"47\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"48\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"49\":{\"c\":[\"Banana\",\"Fruit\"]},\"50\":{\"c\":[\"yellow\",\"curly\",\"long\"]},\"51\":{\"h\":\"Banana 3\"},\"52\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"53\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"54\":{\"c\":[\"Banana\"]},\"55\":{\"c\":[\"yellow\",\"curly\",\"long\"]},\"56\":{\"h\":\"Banana 4\"},\"57\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"58\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"59\":{\"c\":[\"Banana\"]},\"60\":{\"c\":[\"yellow\",\"curly\",\"long\"]},\"61\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"62\":{\"h\":\"Posts\"},\"63\":{\"h\":\"Apple\"},\"64\":{\"h\":\"Banana\"},\"65\":{\"h\":\"Posts\"},\"66\":{\"h\":\"Solidity\"},\"67\":{\"h\":\"Apple\"},\"68\":{\"h\":\"Banana\"}},\"dirtCount\":0,\"index\":[[\"found\",{\"1\":{\"61\":1}}],[\"fruit\",{\"0\":{\"6\":1},\"2\":{\"9\":2,\"14\":1,\"34\":1,\"39\":1,\"44\":1,\"49\":1}}],[\"not\",{\"1\":{\"61\":1}}],[\"number\",{\"1\":{\"46\":1}}],[\"with\",{\"1\":{\"46\":1}}],[\"long\",{\"2\":{\"45\":1,\"50\":1,\"55\":1,\"60\":1}}],[\"yellow\",{\"2\":{\"45\":1,\"50\":1,\"55\":1,\"60\":1}}],[\"your\",{\"1\":{\"0\":1}}],[\"404\",{\"1\":{\"61\":1}}],[\"4\",{\"0\":{\"36\":1,\"56\":1}}],[\"banana\",{\"0\":{\"41\":1,\"46\":1,\"51\":1,\"56\":1,\"64\":1,\"68\":1},\"1\":{\"46\":1},\"2\":{\"44\":1,\"49\":1,\"54\":1,\"59\":1}}],[\"being\",{\"1\":{\"26\":1,\"46\":1}}],[\"big\",{\"2\":{\"10\":1,\"25\":1,\"30\":1,\"35\":1,\"40\":1}}],[\"10\",{\"1\":{\"46\":1}}],[\"1\",{\"0\":{\"21\":1,\"41\":1}}],[\"article\",{\"1\":{\"26\":1,\"46\":1}}],[\"a\",{\"1\":{\"26\":1,\"46\":1}}],[\"apple\",{\"0\":{\"21\":1,\"26\":1,\"31\":1,\"36\":1,\"63\":1,\"67\":1},\"1\":{\"26\":1},\"2\":{\"24\":1,\"29\":1,\"34\":1,\"39\":1}}],[\"and\",{\"1\":{\"0\":1}}],[\"vegetable\",{\"2\":{\"19\":1}}],[\"tomato\",{\"0\":{\"16\":1}}],[\"the\",{\"1\":{\"2\":1,\"3\":1,\"7\":1,\"8\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"22\":1,\"23\":1,\"27\":1,\"28\":1,\"32\":1,\"33\":1,\"37\":1,\"38\":1,\"42\":1,\"43\":1,\"47\":1,\"48\":1,\"52\":1,\"53\":1,\"57\":1,\"58\":1}}],[\"solidity\",{\"0\":{\"66\":1}}],[\"stared\",{\"1\":{\"26\":1,\"46\":1}}],[\"strawberry\",{\"0\":{\"11\":1},\"2\":{\"14\":1}}],[\"small\",{\"2\":{\"5\":1,\"15\":1}}],[\"dragon\",{\"0\":{\"6\":1},\"2\":{\"9\":1}}],[\"round\",{\"2\":{\"5\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"40\":1}}],[\"red\",{\"2\":{\"5\":1,\"10\":1,\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"40\":1}}],[\"3\",{\"0\":{\"3\":1,\"8\":1,\"13\":1,\"18\":1,\"23\":1,\"28\":1,\"31\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1,\"51\":1,\"53\":1,\"58\":1}}],[\"curly\",{\"2\":{\"45\":1,\"50\":1,\"55\":1,\"60\":1}}],[\"content\",{\"1\":{\"2\":1,\"3\":1,\"7\":1,\"8\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"22\":1,\"23\":1,\"27\":1,\"28\":1,\"32\":1,\"33\":1,\"37\":1,\"38\":1,\"42\":1,\"43\":1,\"47\":1,\"48\":1,\"52\":1,\"53\":1,\"57\":1,\"58\":1}}],[\"cherry\",{\"0\":{\"1\":1},\"2\":{\"4\":1}}],[\"is\",{\"1\":{\"2\":1,\"3\":1,\"7\":1,\"8\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"22\":1,\"23\":1,\"27\":1,\"28\":1,\"32\":1,\"33\":1,\"37\":1,\"38\":1,\"42\":1,\"43\":1,\"47\":1,\"48\":1,\"52\":1,\"53\":1,\"57\":1,\"58\":1}}],[\"introduction\",{\"1\":{\"0\":1}}],[\"intro\",{\"0\":{\"0\":1}}],[\"2\",{\"0\":{\"2\":1,\"7\":1,\"12\":1,\"17\":1,\"22\":1,\"26\":1,\"27\":1,\"32\":1,\"37\":1,\"42\":1,\"46\":1,\"47\":1,\"52\":1,\"57\":1}}],[\"heading\",{\"0\":{\"2\":1,\"3\":1,\"7\":1,\"8\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"22\":1,\"23\":1,\"27\":1,\"28\":1,\"32\":1,\"33\":1,\"37\":1,\"38\":1,\"42\":1,\"43\":1,\"47\":1,\"48\":1,\"52\":1,\"53\":1,\"57\":1,\"58\":1}}],[\"here\",{\"1\":{\"0\":1,\"2\":1,\"3\":1,\"7\":1,\"8\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"22\":1,\"23\":1,\"27\":1,\"28\":1,\"32\":1,\"33\":1,\"37\":1,\"38\":1,\"42\":1,\"43\":1,\"47\":1,\"48\":1,\"52\":1,\"53\":1,\"57\":1,\"58\":1}}],[\"posts\",{\"0\":{\"62\":1,\"65\":1}}],[\"profile\",{\"1\":{\"0\":1}}],[\"place\",{\"1\":{\"0\":1}}],[\"page\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2},\"/zh/\":{\"documentCount\":129,\"nextId\":129,\"documentIds\":{\"0\":\"7\",\"1\":\"16\",\"2\":\"16@0\",\"3\":\"17\",\"4\":\"17@0\",\"5\":\"18\",\"6\":\"18@0\",\"7\":\"18@1\",\"8\":\"19\",\"9\":\"19@0\",\"10\":\"19@1\",\"11\":\"20\",\"12\":\"20#markdown-介绍\",\"13\":\"20#markdown-配置\",\"14\":\"20#markdown-扩展\",\"15\":\"20#vuepress-扩展\",\"16\":\"20#主题扩展\",\"17\":\"20#选项卡\",\"18\":\"20#脚注\",\"19\":\"20#导入文件\",\"20\":\"20#tex-语法\",\"21\":\"20#任务列表\",\"22\":\"20#图片增强\",\"23\":\"20#上下角标\",\"24\":\"20#组件\",\"25\":\"20@0\",\"26\":\"20@1\",\"27\":\"21\",\"28\":\"21#页面标题\",\"29\":\"21#页面信息\",\"30\":\"21#页面内容\",\"31\":\"21#组件\",\"32\":\"21@0\",\"33\":\"21@1\",\"34\":\"22\",\"35\":\"22#标题-2\",\"36\":\"22#标题-3\",\"37\":\"22@0\",\"38\":\"22@1\",\"39\":\"23\",\"40\":\"23#标题-2\",\"41\":\"23#标题-3\",\"42\":\"23@0\",\"43\":\"23@1\",\"44\":\"24\",\"45\":\"24#标题-2\",\"46\":\"24#标题-3\",\"47\":\"24@0\",\"48\":\"24@1\",\"49\":\"25\",\"50\":\"25#标题-2\",\"51\":\"25#标题-3\",\"52\":\"25@0\",\"53\":\"25@1\",\"54\":\"26\",\"55\":\"26#数组-array\",\"56\":\"26#创建数组的规则\",\"57\":\"26#数组成员\",\"58\":\"26#结构体-struct\",\"59\":\"26#总结\",\"60\":\"26#映射mapping\",\"61\":\"26#映射的规则\",\"62\":\"26#映射的原理\",\"63\":\"26#在remix上验证-以-mapping-sol为例\",\"64\":\"26#总结-1\",\"65\":\"26#变量初始值\",\"66\":\"26#值类型初始值\",\"67\":\"26#引用类型初始值\",\"68\":\"26#delete操作符\",\"69\":\"26#在remix上验证\",\"70\":\"26#总结-2\",\"71\":\"26#constant和immutable\",\"72\":\"26#constant\",\"73\":\"26#immutable\",\"74\":\"26#在remix上验证-1\",\"75\":\"26#总结-3\",\"76\":\"26#控制流\",\"77\":\"26#用solidity实现插入排序\",\"78\":\"26#写在前面-90-以上的人用solidity写插入算法都会出错。\",\"79\":\"26#插入排序\",\"80\":\"26#python代码\",\"81\":\"26#改写成solidity后有bug\",\"82\":\"26#正确的solidity插入排序\",\"83\":\"26#总结-4\",\"84\":\"26#构造函数\",\"85\":\"26#修饰器\",\"86\":\"26#oppenzepplin的ownable标准实现\",\"87\":\"26#remix-演示示例\",\"88\":\"26#总结-5\",\"89\":\"27\",\"90\":\"27#标题-2\",\"91\":\"27#标题-3\",\"92\":\"27@0\",\"93\":\"27@1\",\"94\":\"28\",\"95\":\"28#标题-2\",\"96\":\"28#标题-3\",\"97\":\"28@0\",\"98\":\"28@1\",\"99\":\"29\",\"100\":\"29#标题-2\",\"101\":\"29#标题-3\",\"102\":\"29@0\",\"103\":\"29@1\",\"104\":\"30\",\"105\":\"30#标题-2\",\"106\":\"30#标题-3\",\"107\":\"30@0\",\"108\":\"30@1\",\"109\":\"31\",\"110\":\"31#标题-2\",\"111\":\"31#标题-3\",\"112\":\"31@0\",\"113\":\"31@1\",\"114\":\"32\",\"115\":\"32#标题-2\",\"116\":\"32#标题-3\",\"117\":\"32@0\",\"118\":\"32@1\",\"119\":\"33\",\"120\":\"33#标题-2\",\"121\":\"33#标题-3\",\"122\":\"33@0\",\"123\":\"33@1\",\"124\":\"34\",\"125\":\"34#标题-2\",\"126\":\"34#标题-3\",\"127\":\"34@0\",\"128\":\"34@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[1],\"2\":[null,null,2],\"3\":[1],\"4\":[null,null,1],\"5\":[1,18],\"6\":[null,null,1],\"7\":[null,null,1],\"8\":[1,20],\"9\":[null,null,1],\"10\":[null,null,1],\"11\":[2,10],\"12\":[2,8],\"13\":[2,12],\"14\":[2,11],\"15\":[2,10],\"16\":[1,10],\"17\":[1,1],\"18\":[1,2],\"19\":[1,1],\"20\":[2,25],\"21\":[1,5],\"22\":[1,2],\"23\":[1,3],\"24\":[1],\"25\":[null,null,1],\"26\":[null,null,1],\"27\":[1,3],\"28\":[1,19],\"29\":[1,20],\"30\":[1,12],\"31\":[1,13],\"32\":[null,null,1],\"33\":[null,null,2],\"34\":[1],\"35\":[2,2],\"36\":[2,2],\"37\":[null,null,1],\"38\":[null,null,3],\"39\":[1],\"40\":[2,2],\"41\":[2,2],\"42\":[null,null,2],\"43\":[null,null,2],\"44\":[1],\"45\":[2,2],\"46\":[2,2],\"47\":[null,null,2],\"48\":[null,null,2],\"49\":[1],\"50\":[2,2],\"51\":[2,2],\"52\":[null,null,1],\"53\":[null,null,2],\"54\":[3,7],\"55\":[2,53],\"56\":[1,64],\"57\":[1,14],\"58\":[2,32],\"59\":[1,13],\"60\":[1,24],\"61\":[1,54],\"62\":[1,17],\"63\":[4,9],\"64\":[1,11],\"65\":[1,5],\"66\":[1,27],\"67\":[1,29],\"68\":[1,15],\"69\":[1,4],\"70\":[1,19],\"71\":[1],\"72\":[1,21],\"73\":[1,35],\"74\":[1,19],\"75\":[1,14],\"76\":[1,57],\"77\":[2],\"78\":[5],\"79\":[1,17],\"80\":[1,25],\"81\":[3,56],\"82\":[1,52],\"83\":[1,25],\"84\":[1,44],\"85\":[1,42],\"86\":[2,13],\"87\":[2,22],\"88\":[1,4],\"89\":[2],\"90\":[2,2],\"91\":[2,2],\"92\":[null,null,1],\"93\":[null,null,3],\"94\":[2,2],\"95\":[2,2],\"96\":[2,2],\"97\":[null,null,1],\"98\":[null,null,3],\"99\":[2],\"100\":[2,2],\"101\":[2,2],\"102\":[null,null,2],\"103\":[null,null,3],\"104\":[2],\"105\":[2,2],\"106\":[2,2],\"107\":[null,null,2],\"108\":[null,null,3],\"109\":[2],\"110\":[2,2],\"111\":[2,2],\"112\":[null,null,2],\"113\":[null,null,3],\"114\":[2,4],\"115\":[2,2],\"116\":[2,2],\"117\":[null,null,2],\"118\":[null,null,3],\"119\":[2],\"120\":[2,2],\"121\":[2,2],\"122\":[null,null,1],\"123\":[null,null,3],\"124\":[2],\"125\":[2,2],\"126\":[2,2],\"127\":[null,null,1],\"128\":[null,null,3]},\"averageFieldLength\":[1.498648348409895,12.271824974210892,1.2135721482261597],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"h\":\"区块链\"},\"2\":{\"c\":[\"区块链\",\"web3\"]},\"3\":{\"h\":\"主要功能与配置演示\"},\"4\":{\"c\":[\"使用指南\"]},\"5\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"6\":{\"c\":[\"使用指南\"]},\"7\":{\"c\":[\"禁用\"]},\"8\":{\"h\":\"布局\",\"t\":[\"布局包括:\",\"导航栏\",\"侧边栏\",\"页脚\",\"同时每个页面包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"主题也带有以下元素:\",\"夜间模式按钮\",\"返回顶部按钮\",\"打印按钮\",\"你可以在主题选项和页面的 frontmatter 中自定义它们。\"]},\"9\":{\"c\":[\"指南\"]},\"10\":{\"c\":[\"布局\"]},\"11\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"12\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"13\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"Frontmatter\",\"Frontmatter 是 VuePress 中很重要的一个概念，请阅读 Frontmatter 介绍 了解详情。\"]},\"14\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"15\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"16\":{\"h\":\"主题扩展\",\"t\":[\"通过 vuepress-plugin-md-enhance，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"17\":{\"h\":\"选项卡\",\"t\":[\"查看详情\"]},\"18\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注^first.\",\"查看详情\"]},\"19\":{\"h\":\"导入文件\",\"t\":[\"查看详情\"]},\"20\":{\"h\":\"TeX 语法\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"查看详情\"]},\"21\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"22\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小。\",\"查看详情\"]},\"23\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"24\":{\"h\":\"组件\"},\"25\":{\"c\":[\"使用指南\"]},\"26\":{\"c\":[\"Markdown\"]},\"27\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"28\":{\"h\":\"页面标题\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"Markdown 中的第一个 H1 标题会被视为页面标题。\",\"你可以在 Markdown 的 Frontmatter 中设置页面标题。\",\"--- title: 页面标题 ---\"]},\"29\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"30\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"图片引入\",\"你可以将图片和 Markdown 文件放置在一起使用相对路径进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"]},\"31\":{\"h\":\"组件\",\"t\":[\"每个 Markdown 页面都会被转换为一个 Vue 组件，这意味着你可以在 Markdown 中使用 Vue 语法：\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"你也可以创建并引入你自己的组件。\"]},\"32\":{\"c\":[\"使用指南\"]},\"33\":{\"c\":[\"页面配置\",\"使用指南\"]},\"34\":{\"h\":\"樱桃\"},\"35\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"36\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"37\":{\"c\":[\"樱桃\"]},\"38\":{\"c\":[\"红\",\"小\",\"圆\"]},\"39\":{\"h\":\"火龙果\"},\"40\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"41\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"42\":{\"c\":[\"火龙果\",\"水果\"]},\"43\":{\"c\":[\"红\",\"大\"]},\"44\":{\"h\":\"草莓\"},\"45\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"46\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"47\":{\"c\":[\"水果\",\"草莓\"]},\"48\":{\"c\":[\"红\",\"小\"]},\"49\":{\"h\":\"番茄\"},\"50\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"51\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"52\":{\"c\":[\"蔬菜\"]},\"53\":{\"c\":[\"红\",\"圆\"]},\"54\":{\"h\":\"引用类型, array, struct\",\"t\":[\"这一讲，我们将介绍solidity中的两个重要变量类型：数组（array）和结构体（struct）。\"]},\"55\":{\"h\":\"数组 array\",\"t\":[\"数组（Array）是solidity常用的一种变量类型，用来存储一组数据（整数，字节，地址等等）。数组分为固定长度数组和可变长度数组两种：\",\"固定长度数组：在声明时指定数组的长度。用T[k]的格式声明，其中T是元素的类型，k是长度，例如：\",\" // 固定长度 Array uint[8] array1; bytes1[5] array2; address[100] array3;\",\"可变长度数组（动态数组）：在声明时不指定数组的长度。用T[]的格式声明，其中T是元素的类型，例如：\",\" // 可变长度 Array uint[] array4; bytes1[] array5; address[] array6; bytes array7;\",\"注意：bytes比较特殊，是数组，但是不用加[]。另外，不能用byte[]声明单字节数组，可以使用bytes或bytes1[]。在gas上，bytes比bytes1[]便宜。因为bytes1[]在memory中要增加31个字节进行填充，会产生额外的gas。但是在storage中，由于内存紧密打包，不存在字节填充。\"]},\"56\":{\"h\":\"创建数组的规则\",\"t\":[\"在solidity里，创建数组有一些规则：\",\"对于memory修饰的动态数组，可以用new操作符来创建，但是必须声明长度，并且声明后长度不能改变。例子：\",\" // memory动态数组 uint[] memory array8 = new uint[](5); bytes memory array9 = new bytes(9);\",\"数组字面常数(Array Literals)是写作表达式形式的数组，用方括号包着来初始化array的一种方式，并且里面每一个元素的type是以第一个元素为准的，例如[1,2,3]里面所有的元素都是uint8类型，因为在solidity中如果一个值没有指定type的话，默认就是最小单位的该type，这里int的默认最小单位类型就是uint8。而[uint(1),2,3]里面的元素都是uint类型，因为第一个元素指定了是uint类型了，我们都以第一个元素为准。 下面的合约中，对于f函数里面的调用，如果我们没有显式对第一个元素进行uint强转的话，是会报错的，因为如上所述我们其实是传入了uint8类型的array，可是g函数需要的却是uint类型的array，就会报错了。\",\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.4.16 <0.9.0; contract C { function f() public pure { g([uint(1), 2, 3]); } function g(uint[3] memory) public pure { // ... } }\",\"如果创建的是动态数组，你需要一个一个元素的赋值。\",\" uint[] memory x = new uint[](3); x[0] = 1; x[1] = 3; x[2] = 4;\"]},\"57\":{\"h\":\"数组成员\",\"t\":[\"length: 数组有一个包含元素数量的length成员，memory数组的长度在创建后是固定的。\",\"push(): 动态数组和bytes拥有push()成员，可以在数组最后添加一个0元素。\",\"push(x): 动态数组和bytes拥有push(x)成员，可以在数组最后添加一个x元素。\",\"pop(): 动态数组和bytes拥有pop()成员，可以移除数组最后一个元素。\",\"Example:\"]},\"58\":{\"h\":\"结构体 struct\",\"t\":[\"Solidity支持通过构造结构体的形式定义新的类型。创建结构体的方法：\",\" // 结构体 struct Student{ uint256 id; uint256 score; }\",\" Student student; // 初始一个student结构体\",\"给结构体赋值的两种方法：\",\" // 给结构体赋值 // 方法1:在函数中创建一个storage的struct引用 function initStudent1() external{ Student storage _student = student; // assign a copy of student _student.id = 11; _student.score = 100; }\",\"Example:\",\" // 方法2:直接引用状态变量的struct function initStudent2() external{ student.id = 1; student.score = 80; }\",\"Example:\"]},\"59\":{\"h\":\"总结\",\"t\":[\"这一讲，我们介绍了solidity中数组（array）和结构体（struct）的基本用法。下一讲我们将介绍solidity中的哈希表——映射（mapping）。\",\"这一讲，我们将介绍solidity中的哈希表：映射（Mapping）类型。\"]},\"60\":{\"h\":\"映射Mapping\",\"t\":[\"在映射中，人们可以通过键（Key）来查询对应的值（Value），比如：通过一个人的id来查询他的钱包地址。\",\"声明映射的格式为mapping(_KeyType => _ValueType)，其中_KeyType和_ValueType分别是Key和Value的变量类型。例子：\",\" mapping(uint => address) public idToAddress; // id映射到地址 mapping(address => address) public swapPair; // 币对的映射，地址到地址\"]},\"61\":{\"h\":\"映射的规则\",\"t\":[\"规则1：映射的_KeyType只能选择solidity默认的类型，比如uint，address等，不能用自定义的结构体。而_ValueType可以使用自定义的类型。下面这个例子会报错，因为_KeyType使用了我们自定义的结构体：\",\" // 我们定义一个结构体 Struct struct Student{ uint256 id; uint256 score; } mapping(Student => uint) public testVar;\",\"规则2：映射的存储位置必须是storage，因此可以用于合约的状态变量，函数中的storage变量，和library函数的参数（见例子）。不能用于public函数的参数或返回结果中，因为mapping记录的是一种关系 (key - value pair)。\",\"规则3：如果映射声明为public，那么solidity会自动给你创建一个getter函数，可以通过Key来查询对应的Value。\",\"规则4：给映射新增的键值对的语法为_Var[_Key] = _Value，其中_Var是映射变量名，_Key和_Value对应新增的键值对。例子：\",\" function writeMap (uint _Key, address _Value) public{ idToAddress[_Key] = _Value; }\"]},\"62\":{\"h\":\"映射的原理\",\"t\":[\"原理1: 映射不储存任何键（Key）的资讯，也没有length的资讯。\",\"原理2: 映射使用keccak256(key)当成offset存取value。\",\"原理3: 因为Ethereum会定义所有未使用的空间为0，所以未赋值（Value）的键（Key）初始值都是各个type的默认值，如uint的默认值是0。\"]},\"63\":{\"h\":\"在Remix上验证 (以 为例)\",\"t\":[\"映射示例 1 部署\",\"映射示例 2 初始值\",\"映射示例 3 key-value pair\"]},\"64\":{\"h\":\"总结\",\"t\":[\"这一讲，我们介绍了solidity中哈希表——映射（Mapping）的用法。至此，我们已经学习了所有常用变量种类，之后我们会学习控制流if-else, while等。\"]},\"65\":{\"h\":\"变量初始值\",\"t\":[\"在solidity中，声明但没赋值的变量都有它的初始值或默认值。这一讲，我们将介绍常用变量的初始值。\"]},\"66\":{\"h\":\"值类型初始值\",\"t\":[\"boolean: false\",\"string: \\\"\\\"\",\"int: 0\",\"uint: 0\",\"enum: 枚举中的第一个元素\",\"address: 0x0000000000000000000000000000000000000000 (或 address(0))\",\"function\",\"internal: 空白方程\",\"external: 空白方程\",\"可以用public变量的getter函数验证上面写的初始值是否正确：\",\" bool public _bool; // false string public _string; // \\\"\\\" int public _int; // 0 uint public _uint; // 0 address public _address; // 0x0000000000000000000000000000000000000000 enum ActionSet { Buy, Hold, Sell} ActionSet public _enum; // 第1个内容Buy的索引0 function fi() internal{} // internal空白方程 function fe() external{} // external空白方程\"]},\"67\":{\"h\":\"引用类型初始值\",\"t\":[\"映射mapping: 所有元素都为其默认值的mapping\",\"结构体struct: 所有成员设为其默认值的结构体\",\"数组array\",\"动态数组: []\",\"静态数组（定长）: 所有成员设为其默认值的静态数组\",\"可以用public变量的getter函数验证上面写的初始值是否正确：\",\" // Reference Types uint[8] public _staticArray; // 所有成员设为其默认值的静态数组[0,0,0,0,0,0,0,0] uint[] public _dynamicArray; // `[]` mapping(uint => address) public _mapping; // 所有元素都为其默认值的mapping // 所有成员设为其默认值的结构体 0, 0 struct Student{ uint256 id; uint256 score; } Student public student;\"]},\"68\":{\"h\":\"操作符\",\"t\":[\"delete a会让变量a的值变为初始值。\",\" // delete操作符 bool public _bool2 = true; function d() external { delete _bool2; // delete 会让_bool2变为默认值，false }\"]},\"69\":{\"h\":\"在remix上验证\",\"t\":[\"部署合约查看值类型、引用类型的初始值\",\"值类型、引用类型delete操作后的默认值\"]},\"70\":{\"h\":\"总结\",\"t\":[\"这一讲，我们介绍了solidity中变量的初始值。变量被声明但没有赋值的时候，它的值默认为初始值。不同类型的变量初始值不同，delete操作符可以删除一个变量的值并代替为初始值。\",\"这一讲，我们介绍solidity中两个关键字，constant（常量）和immutable（不变量）。状态变量声明这个两个关键字之后，不能在合约后更改数值；并且还可以节省gas。另外，只有数值变量可以声明constant和immutable；string和bytes可以声明为constant，但不能为immutable。\"]},\"71\":{\"h\":\"constant和immutable\"},\"72\":{\"h\":\"constant\",\"t\":[\"constant变量必须在声明的时候初始化，之后再也不能改变。尝试改变的话，编译不通过。\",\" // constant变量必须在声明的时候初始化，之后不能改变 uint256 constant CONSTANT_NUM = 10; string constant CONSTANT_STRING = \\\"0xAA\\\"; bytes constant CONSTANT_BYTES = \\\"WTF\\\"; address constant CONSTANT_ADDRESS = 0x0000000000000000000000000000000000000000;\"]},\"73\":{\"h\":\"immutable\",\"t\":[\"immutable变量可以在声明时或构造函数中初始化，因此更加灵活。\",\" // immutable变量可以在constructor里初始化，之后不能改变 uint256 public immutable IMMUTABLE_NUM = 9999999999; address public immutable IMMUTABLE_ADDRESS; uint256 public immutable IMMUTABLE_BLOCK; uint256 public immutable IMMUTABLE_TEST;\",\"你可以使用全局变量例如address(this)，block.number ，或者自定义的函数给immutable变量初始化。在下面这个例子，我们利用了test()函数给IMMUTABLE_TEST初始化为9：\",\" // 利用constructor初始化immutable变量，因此可以利用 constructor(){ IMMUTABLE_ADDRESS = address(this); IMMUTABLE_BLOCK = block.number; IMMUTABLE_TEST = test(); } function test() public pure returns(uint256){ uint256 what = 9; return(what); }\"]},\"74\":{\"h\":\"在remix上验证\",\"t\":[\"部署好合约之后，通过remix上的getter函数，能获取到constant和immutable变量初始化好的值。\",\"constant变量初始化之后，尝试改变它的值，会编译不通过并抛出TypeError: Cannot assign to a constant variable.的错误。\",\"immutable变量初始化之后，尝试改变它的值，会编译不通过并抛出TypeError: Immutable state variable already initialized.的错误。\"]},\"75\":{\"h\":\"总结\",\"t\":[\"这一讲，我们介绍solidity中两个关键字，constant（常量）和immutable（不变量），让不应该变的变量保持不变。这样的做法能在节省gas的同时提升合约的安全性。\",\"这一讲，我们将介绍solidity中的控制流，然后讲如何用solidity实现插入排序（InsertionSort），一个看起来简单，但实际上很容易写出bug的程序。\"]},\"76\":{\"h\":\"控制流\",\"t\":[\"Solidity的控制流与其他语言类似，主要包含以下几种：\",\"if-else\",\"function ifElseTest(uint256 _number) public pure returns(bool){ if(_number == 0){ return(true); }else{ return(false); } }\",\"for循环\",\"function forLoopTest() public pure returns(uint256){ uint sum = 0; for(uint i = 0; i < 10; i++){ sum += i; } return(sum); }\",\"while循环\",\"function whileTest() public pure returns(uint256){ uint sum = 0; uint i = 0; while(i < 10){ sum += i; i++; } return(sum); }\",\"do-while循环\",\"function doWhileTest() public pure returns(uint256){ uint sum = 0; uint i = 0; do{ sum += i; i++; }while(i < 10); return(sum); }\",\"三元运算符 三元运算符是solidity中唯一一个接受三个操作数的运算符，规则条件? 条件为真的表达式:条件为假的表达式。 此运算符经常用作 if 语句的快捷方式。\",\"// 三元运算符 ternary/conditional operator function ternaryTest(uint256 x, uint256 y) public pure returns(uint256){ // return the max of x and y return x >= y ? x: y; }\",\"另外还有continue（立即进入下一个循环）和break（跳出当前循环）关键字可以使用。\"]},\"77\":{\"h\":\"用 实现插入排序\"},\"78\":{\"h\":\"写在前面：90%以上的人用 写插入算法都会出错。\"},\"79\":{\"h\":\"插入排序\",\"t\":[\"排序算法解决的问题是将无序的一组数字，例如[2, 5, 3, 1]，从小到大依次排列好。插入排序（InsertionSort）是最简单的一种排序算法，也是很多人学习的第一个算法。它的思路很简单，从前往后，依次将每一个数和排在他前面的数字比大小，如果比前面的数字小，就互换位置。示意图：\",\"插入排序\"]},\"80\":{\"h\":\"代码\",\"t\":[\"我们可以先看一下插入排序的python代码：\",\"# Python program for implementation of Insertion Sort def insertionSort(arr): for i in range(1, len(arr)): key = arr[i] j = i-1 while j >=0 and key < arr[j] : arr[j+1] = arr[j] j -= 1 arr[j+1] = key return arr\"]},\"81\":{\"h\":\"改写成 后有 ！\",\"t\":[\"一共8行python代码就可以完成插入排序，非常简单。那么我们将它改写成solidity代码，将函数，变量，循环等等都做了相应的转换，只需要9行代码：\",\" // 插入排序 错误版 function insertionSortWrong(uint[] memory a) public pure returns(uint[] memory) { for (uint i = 1;i < a.length;i++){ uint temp = a[i]; uint j=i-1; while( (j >= 0) && (temp < a[j])){ a[j+1] = a[j]; j--; } a[j+1] = temp; } return(a); }\",\"那我们把改好的放到remix上去跑，输入[2, 5, 3, 1]。BOOM！有bug！改了半天，没找到bug在哪。我又去google搜”solidity insertion sort”，然后发现网上用solidity写的插入算法教程都是错的，比如：Sorting in Solidity without Comparison\",\"Remix decoded output 出现错误内容\"]},\"82\":{\"h\":\"正确的solidity插入排序\",\"t\":[\"花了几个小时，在Dapp-Learning社群一个朋友的帮助下，终于找到了bug所在。solidity中最常用的变量类型是uint，也就是正整数，取到负值的话，会报underflow错误。而在插入算法中，变量j有可能会取到-1，引起报错。\",\"这里，我们需要把j加1，让它无法取到负值。正确代码：\",\" // 插入排序 正确版 function insertionSort(uint[] memory a) public pure returns(uint[] memory) { // note that uint can not take negative value for (uint i = 1;i < a.length;i++){ uint temp = a[i]; uint j=i; while( (j >= 1) && (temp < a[j-1])){ a[j] = a[j-1]; j--; } a[j] = temp; } return(a); }\",\"运行后的结果：\",\"\\\"输入[2,5,3,1] 输出[1,2,3,5] \\\"\"]},\"83\":{\"h\":\"总结\",\"t\":[\"这一讲，我们介绍了solidity中控制流，并且用solidity写了插入排序。看起来很简单，但实际很难。这就是solidity，坑很多，每个月都有项目因为这些小bug损失几千万甚至上亿美元。掌握好基础，不断练习，才能写出更好的solidity代码。\",\"title: 11. 构造函数和修饰器 tags:\",\"solidity\",\"basic\",\"wtfacademy\",\"constructor\",\"modifier\",\"这一讲，我们将用合约权限控制（Ownable）的例子介绍solidity语言中构造函数（constructor）和独有的修饰器（modifier）。\"]},\"84\":{\"h\":\"构造函数\",\"t\":[\"构造函数（constructor）是一种特殊的函数，每个合约可以定义一个，并在部署合约的时候自动运行一次。它可以用来初始化合约的一些参数，例如初始化合约的owner地址：\",\" address owner; // 定义owner变量 // 构造函数 constructor() { owner = msg.sender; // 在部署合约的时候，将owner设置为部署者的地址 }\",\"注意⚠️：构造函数在不同的solidity版本中的语法并不一致，在Solidity 0.4.22之前，构造函数不使用 constructor 而是使用与合约名同名的函数作为构造函数而使用，由于这种旧写法容易使开发者在书写时发生疏漏（例如合约名叫 Parents，构造函数名写成 parents），使得构造函数变成普通函数，引发漏洞，所以0.4.22版本及之后，采用了全新的 constructor 写法。\",\"构造函数的旧写法代码示例：\",\"pragma solidity =0.4.21; contract Parents { // 与合约名Parents同名的函数就是构造函数 function Parents () public { } }\"]},\"85\":{\"h\":\"修饰器\",\"t\":[\"修饰器（modifier）是solidity特有的语法，类似于面向对象编程中的decorator，声明函数拥有的特性，并减少代码冗余。它就像钢铁侠的智能盔甲，穿上它的函数会带有某些特定的行为。modifier的主要使用场景是运行函数前的检查，例如地址，变量，余额等。\",\"钢铁侠的modifier\",\"我们来定义一个叫做onlyOwner的modifier：\",\" // 定义modifier modifier onlyOwner { require(msg.sender == owner); // 检查调用者是否为owner地址 _; // 如果是的话，继续运行函数主体；否则报错并revert交易 }\",\"带有onlyOwner修饰符的函数只能被owner地址调用，比如下面这个例子：\",\" function changeOwner(address _newOwner) external onlyOwner{ owner = _newOwner; // 只有owner地址运行这个函数，并改变owner }\",\"我们定义了一个changeOwner函数，运行他可以改变合约的owner，但是由于onlyOwner修饰符的存在，只有原先的owner可以调用，别人调用就会报错。这也是最常用的控制智能合约权限的方法。\"]},\"86\":{\"h\":\"OppenZepplin的Ownable标准实现：\",\"t\":[\"OppenZepplin是一个维护solidity标准化代码库的组织，他的Ownable标准实现如下： https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\"]},\"87\":{\"h\":\"Remix 演示示例\",\"t\":[\"以 Owner.sol 为例。\",\"在 Remix 上编译部署代码。\",\"点击 owner 按钮查看当前 owner 变量。\",\"以 owner 地址的用户身份，调用 changeOwner 函数，交易成功。\",\"以非 owner 地址的用户身份，调用 changeOwner 函数，交易失败，因为modifier onlyOwner 的检查语句不满足。\"]},\"88\":{\"h\":\"总结\",\"t\":[\"这一讲，我们介绍了solidity中的构造函数和修饰符，并举了一个控制合约权限的Ownable合约。\"]},\"89\":{\"h\":\"苹果 1\"},\"90\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"91\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"92\":{\"c\":[\"苹果\"]},\"93\":{\"c\":[\"红\",\"大\",\"圆\"]},\"94\":{\"h\":\"苹果 2\",\"t\":[\"一个被星标了的苹果文章。\"]},\"95\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"96\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"97\":{\"c\":[\"苹果\"]},\"98\":{\"c\":[\"红\",\"大\",\"圆\"]},\"99\":{\"h\":\"苹果 3\"},\"100\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"101\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"102\":{\"c\":[\"苹果\",\"水果\"]},\"103\":{\"c\":[\"红\",\"大\",\"圆\"]},\"104\":{\"h\":\"苹果 4\"},\"105\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"106\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"107\":{\"c\":[\"苹果\",\"水果\"]},\"108\":{\"c\":[\"红\",\"大\",\"圆\"]},\"109\":{\"h\":\"香蕉 1\"},\"110\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"111\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"112\":{\"c\":[\"香蕉\",\"水果\"]},\"113\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"114\":{\"h\":\"香蕉 2\",\"t\":[\"一个被数字 10 星标了的香蕉文章。\"]},\"115\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"116\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"117\":{\"c\":[\"香蕉\",\"水果\"]},\"118\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"119\":{\"h\":\"香蕉 3\"},\"120\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"121\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"122\":{\"c\":[\"香蕉\"]},\"123\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"124\":{\"h\":\"香蕉 4\"},\"125\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"126\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"127\":{\"c\":[\"香蕉\"]},\"128\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]}},\"dirtCount\":0,\"index\":[[\"星标了的香蕉文章\",{\"1\":{\"114\":1}}],[\"长\",{\"2\":{\"113\":1,\"118\":1,\"123\":1,\"128\":1}}],[\"弯曲的\",{\"2\":{\"113\":1,\"118\":1,\"123\":1,\"128\":1}}],[\"黄\",{\"2\":{\"113\":1,\"118\":1,\"123\":1,\"128\":1}}],[\"香蕉\",{\"0\":{\"109\":1,\"114\":1,\"119\":1,\"124\":1},\"2\":{\"112\":1,\"117\":1,\"122\":1,\"127\":1}}],[\"苹果\",{\"0\":{\"89\":1,\"94\":1,\"99\":1,\"104\":1},\"2\":{\"92\":1,\"97\":1,\"102\":1,\"107\":1}}],[\"交易失败\",{\"1\":{\"87\":1}}],[\"交易成功\",{\"1\":{\"87\":1}}],[\"调用\",{\"1\":{\"87\":2}}],[\"按钮查看当前\",{\"1\":{\"87\":1}}],[\"点击\",{\"1\":{\"87\":1}}],[\"他的ownable标准实现如下\",{\"1\":{\"86\":1}}],[\"别人调用就会报错\",{\"1\":{\"85\":1}}],[\"运行他可以改变合约的owner\",{\"1\":{\"85\":1}}],[\"运行后的结果\",{\"1\":{\"82\":1}}],[\"带有onlyowner修饰符的函数只能被owner地址调用\",{\"1\":{\"85\":1}}],[\"否则报错并revert交易\",{\"1\":{\"85\":1}}],[\"继续运行函数主体\",{\"1\":{\"85\":1}}],[\"检查调用者是否为owner地址\",{\"1\":{\"85\":1}}],[\"钢铁侠的modifier\",{\"1\":{\"85\":1}}],[\"余额等\",{\"1\":{\"85\":1}}],[\"穿上它的函数会带有某些特定的行为\",{\"1\":{\"85\":1}}],[\"类似于面向对象编程中的decorator\",{\"1\":{\"85\":1}}],[\"类型\",{\"1\":{\"59\":1}}],[\"修饰器\",{\"0\":{\"85\":1},\"1\":{\"85\":1}}],[\"与合约名parents同名的函数就是构造函数\",{\"1\":{\"84\":1}}],[\"采用了全新的\",{\"1\":{\"84\":1}}],[\"使得构造函数变成普通函数\",{\"1\":{\"84\":1}}],[\"使用指南\",{\"1\":{\"29\":2},\"2\":{\"4\":1,\"6\":1,\"25\":1,\"32\":1,\"33\":1}}],[\"由于这种旧写法容易使开发者在书写时发生疏漏\",{\"1\":{\"84\":1}}],[\"由于内存紧密打包\",{\"1\":{\"55\":1}}],[\"定义modifier\",{\"1\":{\"85\":1}}],[\"定义owner变量\",{\"1\":{\"84\":1}}],[\"定长\",{\"1\":{\"67\":1}}],[\"它就像钢铁侠的智能盔甲\",{\"1\":{\"85\":1}}],[\"它可以用来初始化合约的一些参数\",{\"1\":{\"84\":1}}],[\"它的思路很简单\",{\"1\":{\"79\":1}}],[\"它的值默认为初始值\",{\"1\":{\"70\":1}}],[\"并举了一个控制合约权限的ownable合约\",{\"1\":{\"88\":1}}],[\"并改变owner\",{\"1\":{\"85\":1}}],[\"并减少代码冗余\",{\"1\":{\"85\":1}}],[\"并在部署合约的时候自动运行一次\",{\"1\":{\"84\":1}}],[\"并且用solidity写了插入排序\",{\"1\":{\"83\":1}}],[\"并且还可以节省gas\",{\"1\":{\"70\":1}}],[\"并且里面每一个元素的type是以第一个元素为准的\",{\"1\":{\"56\":1}}],[\"并且声明后长度不能改变\",{\"1\":{\"56\":1}}],[\"构造函数的旧写法代码示例\",{\"1\":{\"84\":1}}],[\"构造函数名写成\",{\"1\":{\"84\":1}}],[\"构造函数不使用\",{\"1\":{\"84\":1}}],[\"构造函数在不同的solidity版本中的语法并不一致\",{\"1\":{\"84\":1}}],[\"构造函数\",{\"0\":{\"84\":1},\"1\":{\"84\":2}}],[\"构造函数和修饰器\",{\"1\":{\"83\":1}}],[\"才能写出更好的solidity代码\",{\"1\":{\"83\":1}}],[\"掌握好基础\",{\"1\":{\"83\":1}}],[\"坑很多\",{\"1\":{\"83\":1}}],[\"看起来很简单\",{\"1\":{\"83\":1}}],[\"输出\",{\"1\":{\"82\":1}}],[\"输入\",{\"1\":{\"81\":1,\"82\":1}}],[\"正确版\",{\"1\":{\"82\":1}}],[\"正确代码\",{\"1\":{\"82\":1}}],[\"正确的solidity插入排序\",{\"0\":{\"82\":1}}],[\"让它无法取到负值\",{\"1\":{\"82\":1}}],[\"让不应该变的变量保持不变\",{\"1\":{\"75\":1}}],[\"引发漏洞\",{\"1\":{\"84\":1}}],[\"引起报错\",{\"1\":{\"82\":1}}],[\"引用类型delete操作后的默认值\",{\"1\":{\"69\":1}}],[\"引用类型的初始值\",{\"1\":{\"69\":1}}],[\"引用类型初始值\",{\"0\":{\"67\":1}}],[\"引用类型\",{\"0\":{\"54\":1}}],[\"取到负值的话\",{\"1\":{\"82\":1}}],[\"终于找到了bug所在\",{\"1\":{\"82\":1}}],[\"花了几个小时\",{\"1\":{\"82\":1}}],[\"出现错误内容\",{\"1\":{\"81\":1}}],[\"然后发现网上用solidity写的插入算法教程都是错的\",{\"1\":{\"81\":1}}],[\"然后讲如何用solidity实现插入排序\",{\"1\":{\"75\":1}}],[\"我又去google搜\",{\"1\":{\"81\":1}}],[\"我们定义了一个changeowner函数\",{\"1\":{\"85\":1}}],[\"我们定义一个结构体\",{\"1\":{\"61\":1}}],[\"我们来定义一个叫做onlyowner的modifier\",{\"1\":{\"85\":1}}],[\"我们将用合约权限控制\",{\"1\":{\"83\":1}}],[\"我们将介绍常用变量的初始值\",{\"1\":{\"65\":1}}],[\"我们将介绍solidity中的控制流\",{\"1\":{\"75\":1}}],[\"我们将介绍solidity中的哈希表\",{\"1\":{\"59\":1}}],[\"我们将介绍solidity中的两个重要变量类型\",{\"1\":{\"54\":1}}],[\"我们需要把j加1\",{\"1\":{\"82\":1}}],[\"我们可以先看一下插入排序的python代码\",{\"1\":{\"80\":1}}],[\"我们利用了test\",{\"1\":{\"73\":1}}],[\"我们介绍solidity中两个关键字\",{\"1\":{\"70\":1,\"75\":1}}],[\"我们介绍了solidity中的构造函数和修饰符\",{\"1\":{\"88\":1}}],[\"我们介绍了solidity中控制流\",{\"1\":{\"83\":1}}],[\"我们介绍了solidity中变量的初始值\",{\"1\":{\"70\":1}}],[\"我们介绍了solidity中哈希表\",{\"1\":{\"64\":1}}],[\"我们介绍了solidity中数组\",{\"1\":{\"59\":1}}],[\"我们已经学习了所有常用变量种类\",{\"1\":{\"64\":1}}],[\"我们都以第一个元素为准\",{\"1\":{\"56\":1}}],[\"没找到bug在哪\",{\"1\":{\"81\":1}}],[\"改了半天\",{\"1\":{\"81\":1}}],[\"改写成\",{\"0\":{\"81\":1}}],[\"有bug\",{\"1\":{\"81\":1}}],[\"那我们把改好的放到remix上去跑\",{\"1\":{\"81\":1}}],[\"那么我们将它改写成solidity代码\",{\"1\":{\"81\":1}}],[\"那么solidity会自动给你创建一个getter函数\",{\"1\":{\"61\":1}}],[\"错误版\",{\"1\":{\"81\":1}}],[\"只有原先的owner可以调用\",{\"1\":{\"85\":1}}],[\"只有owner地址运行这个函数\",{\"1\":{\"85\":1}}],[\"只有数值变量可以声明constant和immutable\",{\"1\":{\"70\":1}}],[\"只需要9行代码\",{\"1\":{\"81\":1}}],[\"循环等等都做了相应的转换\",{\"1\":{\"81\":1}}],[\"将owner设置为部署者的地址\",{\"1\":{\"84\":1}}],[\"将函数\",{\"1\":{\"81\":1}}],[\"将你的个人介绍和档案放置在此处\",{\"1\":{\"0\":1}}],[\"非常简单\",{\"1\":{\"81\":1}}],[\"一个被数字\",{\"1\":{\"114\":1}}],[\"一个被星标了的苹果文章\",{\"1\":{\"94\":1}}],[\"一个看起来简单\",{\"1\":{\"75\":1}}],[\"一共8行python代码就可以完成插入排序\",{\"1\":{\"81\":1}}],[\"后有\",{\"0\":{\"81\":1}}],[\"j=i\",{\"1\":{\"81\":1,\"82\":1}}],[\"j+1\",{\"1\":{\"80\":2,\"81\":2}}],[\"j\",{\"1\":{\"80\":5,\"81\":4,\"82\":6}}],[\"代码\",{\"0\":{\"80\":1}}],[\"示意图\",{\"1\":{\"79\":1}}],[\"就互换位置\",{\"1\":{\"79\":1}}],[\"就会报错了\",{\"1\":{\"56\":1}}],[\"依次将每一个数和排在他前面的数字比大小\",{\"1\":{\"79\":1}}],[\"从前往后\",{\"1\":{\"79\":1}}],[\"从小到大依次排列好\",{\"1\":{\"79\":1}}],[\"也就是正整数\",{\"1\":{\"82\":1}}],[\"也是很多人学习的第一个算法\",{\"1\":{\"79\":1}}],[\"也没有length的资讯\",{\"1\":{\"62\":1}}],[\"排序算法解决的问题是将无序的一组数字\",{\"1\":{\"79\":1}}],[\"插入排序\",{\"0\":{\"79\":1},\"1\":{\"79\":2,\"81\":1,\"82\":1}}],[\"插件来实现\",{\"1\":{\"14\":1}}],[\"写法\",{\"1\":{\"84\":1}}],[\"写插入算法都会出错\",{\"0\":{\"78\":1}}],[\"写在前面\",{\"0\":{\"78\":1}}],[\"写作日期为\",{\"1\":{\"29\":1}}],[\"实现插入排序\",{\"0\":{\"77\":1}}],[\"关键字可以使用\",{\"1\":{\"76\":1}}],[\"关于这些扩展\",{\"1\":{\"15\":1}}],[\"跳出当前循环\",{\"1\":{\"76\":1}}],[\"立即进入下一个循环\",{\"1\":{\"76\":1}}],[\">=\",{\"1\":{\"76\":1,\"81\":1,\"82\":1}}],[\">=0\",{\"1\":{\"56\":1,\"80\":1}}],[\"语句的快捷方式\",{\"1\":{\"76\":1}}],[\"语法\",{\"0\":{\"20\":1},\"1\":{\"16\":1,\"31\":1}}],[\"语法进行了扩展\",{\"1\":{\"15\":1}}],[\"语法扩展\",{\"1\":{\"14\":1}}],[\"此运算符经常用作\",{\"1\":{\"76\":1}}],[\"此文字有脚注^first\",{\"1\":{\"18\":1}}],[\"条件为假的表达式\",{\"1\":{\"76\":1}}],[\"条件为真的表达式\",{\"1\":{\"76\":1}}],[\"三元运算符是solidity中唯一一个接受三个操作数的运算符\",{\"1\":{\"76\":1}}],[\"三元运算符\",{\"1\":{\"76\":2}}],[\"<\",{\"1\":{\"76\":3,\"80\":1,\"81\":2,\"82\":2}}],[\"<0\",{\"1\":{\"56\":1}}],[\"控制流\",{\"0\":{\"76\":1}}],[\"尝试改变它的值\",{\"1\":{\"74\":2}}],[\"尝试改变的话\",{\"1\":{\"72\":1}}],[\"能获取到constant和immutable变量初始化好的值\",{\"1\":{\"74\":1}}],[\"利用constructor初始化immutable变量\",{\"1\":{\"73\":1}}],[\"函数\",{\"1\":{\"87\":2}}],[\"函数给immutable\",{\"1\":{\"73\":1}}],[\"函数中的storage变量\",{\"1\":{\"61\":1}}],[\"negative\",{\"1\":{\"82\":1}}],[\"newowner\",{\"1\":{\"85\":2}}],[\"new\",{\"1\":{\"56\":3}}],[\"not\",{\"1\":{\"82\":1}}],[\"note\",{\"1\":{\"82\":1}}],[\"number\",{\"1\":{\"73\":2,\"76\":2}}],[\"num\",{\"1\":{\"72\":1,\"73\":1}}],[\"编译不通过\",{\"1\":{\"72\":1}}],[\"编辑此页链接\",{\"1\":{\"5\":1}}],[\"之后不能改变\",{\"1\":{\"72\":1,\"73\":1}}],[\"之后再也不能改变\",{\"1\":{\"72\":1}}],[\"之后我们会学习控制流if\",{\"1\":{\"64\":1}}],[\"但实际很难\",{\"1\":{\"83\":1}}],[\"但实际上很容易写出bug的程序\",{\"1\":{\"75\":1}}],[\"但不能为immutable\",{\"1\":{\"70\":1}}],[\"但是由于onlyowner修饰符的存在\",{\"1\":{\"85\":1}}],[\"但是必须声明长度\",{\"1\":{\"56\":1}}],[\"但是在storage中\",{\"1\":{\"55\":1}}],[\"但是不用加\",{\"1\":{\"55\":1}}],[\"状态变量声明这个两个关键字之后\",{\"1\":{\"70\":1}}],[\"常量\",{\"1\":{\"70\":1,\"75\":1}}],[\"变量j有可能会取到\",{\"1\":{\"82\":1}}],[\"变量\",{\"1\":{\"81\":1,\"85\":1,\"87\":1}}],[\"变量被声明但没有赋值的时候\",{\"1\":{\"70\":1}}],[\"变量初始值\",{\"0\":{\"65\":1}}],[\"值类型\",{\"1\":{\"69\":1}}],[\"值类型初始值\",{\"0\":{\"66\":1}}],[\"decoded\",{\"1\":{\"81\":1}}],[\"def\",{\"1\":{\"80\":1}}],[\"delete操作符可以删除一个变量的值并代替为初始值\",{\"1\":{\"70\":1}}],[\"delete操作符\",{\"1\":{\"68\":1}}],[\"delete\",{\"1\":{\"68\":3}}],[\"dowhiletest\",{\"1\":{\"76\":1}}],[\"do\",{\"1\":{\"76\":2}}],[\"d\",{\"1\":{\"68\":1}}],[\"dynamicarray\",{\"1\":{\"67\":1}}],[\"操作符\",{\"0\":{\"68\":1}}],[\"`\",{\"1\":{\"67\":2}}],[\"静态数组\",{\"1\":{\"67\":1}}],[\"所以0\",{\"1\":{\"84\":1}}],[\"所以未赋值\",{\"1\":{\"62\":1}}],[\"所有成员设为其默认值的静态数组\",{\"1\":{\"67\":2}}],[\"所有成员设为其默认值的结构体\",{\"1\":{\"67\":2}}],[\"所有元素都为其默认值的mapping\",{\"1\":{\"67\":2}}],[\"第1个内容buy的索引0\",{\"1\":{\"66\":1}}],[\"空白方程\",{\"1\":{\"66\":2}}],[\"或者自定义的函数给immutable变量初始化\",{\"1\":{\"73\":1}}],[\"或\",{\"1\":{\"66\":1}}],[\"枚举中的第一个元素\",{\"1\":{\"66\":1}}],[\"至此\",{\"1\":{\"64\":1}}],[\"部署好合约之后\",{\"1\":{\"74\":1}}],[\"部署合约查看值类型\",{\"1\":{\"69\":1}}],[\"部署\",{\"1\":{\"63\":1}}],[\"以非\",{\"1\":{\"87\":1}}],[\"以上的人用\",{\"0\":{\"78\":1}}],[\"以\",{\"0\":{\"63\":1},\"1\":{\"87\":2}}],[\"以便\",{\"1\":{\"11\":1}}],[\"如uint的默认值是0\",{\"1\":{\"62\":1}}],[\"如果是的话\",{\"1\":{\"85\":1}}],[\"如果比前面的数字小\",{\"1\":{\"79\":1}}],[\"如果映射声明为public\",{\"1\":{\"61\":1}}],[\"如果创建的是动态数组\",{\"1\":{\"56\":1}}],[\"如果我们没有显式对第一个元素进行uint强转的话\",{\"1\":{\"56\":1}}],[\"如果你是一个新手\",{\"1\":{\"12\":1}}],[\"初始值\",{\"1\":{\"63\":1}}],[\"初始值都是各个type的默认值\",{\"1\":{\"62\":1}}],[\"初始一个student结构体\",{\"1\":{\"58\":1}}],[\"当成offset存取value\",{\"1\":{\"62\":1}}],[\"原理3\",{\"1\":{\"62\":1}}],[\"原理2\",{\"1\":{\"62\":1}}],[\"原理1\",{\"1\":{\"62\":1}}],[\"给映射新增的键值对的语法为\",{\"1\":{\"61\":1}}],[\"给结构体赋值\",{\"1\":{\"58\":1}}],[\"给结构体赋值的两种方法\",{\"1\":{\"58\":1}}],[\"见例子\",{\"1\":{\"61\":1}}],[\"规则条件\",{\"1\":{\"76\":1}}],[\"规则4\",{\"1\":{\"61\":1}}],[\"规则3\",{\"1\":{\"61\":1}}],[\"规则2\",{\"1\":{\"61\":1}}],[\"规则1\",{\"1\":{\"61\":1}}],[\"地址的用户身份\",{\"1\":{\"87\":2}}],[\"地址到地址\",{\"1\":{\"60\":1}}],[\"地址等等\",{\"1\":{\"55\":1}}],[\"币对的映射\",{\"1\":{\"60\":1}}],[\"其中\",{\"1\":{\"60\":1,\"61\":1}}],[\"其中t是元素的类型\",{\"1\":{\"55\":2}}],[\"声明函数拥有的特性\",{\"1\":{\"85\":1}}],[\"声明但没赋值的变量都有它的初始值或默认值\",{\"1\":{\"65\":1}}],[\"声明映射的格式为mapping\",{\"1\":{\"60\":1}}],[\"声明单字节数组\",{\"1\":{\"55\":1}}],[\"比如下面这个例子\",{\"1\":{\"85\":1}}],[\"比如uint\",{\"1\":{\"61\":1}}],[\"比如\",{\"1\":{\"60\":1,\"81\":1}}],[\"variable\",{\"1\":{\"74\":2}}],[\"var是映射变量名\",{\"1\":{\"61\":1}}],[\"var\",{\"1\":{\"61\":1}}],[\"value对应新增的键值对\",{\"1\":{\"61\":1}}],[\"valuetype可以使用自定义的类型\",{\"1\":{\"61\":1}}],[\"valuetype分别是key和value的变量类型\",{\"1\":{\"60\":1}}],[\"valuetype\",{\"1\":{\"60\":1}}],[\"value\",{\"1\":{\"60\":1,\"61\":4,\"62\":1,\"63\":1,\"82\":1}}],[\"vue\",{\"1\":{\"31\":2}}],[\"vuepress\",{\"0\":{\"15\":1},\"1\":{\"11\":2,\"13\":2,\"14\":1,\"15\":2,\"16\":1,\"30\":1}}],[\"来查询对应的值\",{\"1\":{\"60\":1}}],[\"来解析\",{\"1\":{\"14\":1}}],[\"人们可以通过键\",{\"1\":{\"60\":1}}],[\"映射示例\",{\"1\":{\"63\":3}}],[\"映射使用keccak256\",{\"1\":{\"62\":1}}],[\"映射不储存任何键\",{\"1\":{\"62\":1}}],[\"映射的原理\",{\"0\":{\"62\":1}}],[\"映射的存储位置必须是storage\",{\"1\":{\"61\":1}}],[\"映射的\",{\"1\":{\"61\":1}}],[\"映射的规则\",{\"0\":{\"61\":1}}],[\"映射mapping\",{\"0\":{\"60\":1},\"1\":{\"67\":1}}],[\"映射\",{\"1\":{\"59\":2,\"64\":1}}],[\"总结\",{\"0\":{\"59\":1,\"64\":1,\"70\":1,\"75\":1,\"83\":1,\"88\":1}}],[\"直接引用状态变量的struct\",{\"1\":{\"58\":1}}],[\"方法2\",{\"1\":{\"58\":1}}],[\"方法1\",{\"1\":{\"58\":1}}],[\"openzeppelin\",{\"1\":{\"86\":2}}],[\"operator\",{\"1\":{\"76\":1}}],[\"oppenzepplin是一个维护solidity标准化代码库的组织\",{\"1\":{\"86\":1}}],[\"oppenzepplin的ownable标准实现\",{\"0\":{\"86\":1}}],[\"onlyowner\",{\"1\":{\"85\":2,\"87\":1}}],[\"owner\",{\"1\":{\"84\":2,\"85\":2,\"87\":5}}],[\"ownable\",{\"1\":{\"83\":1,\"86\":1}}],[\"output\",{\"1\":{\"81\":1}}],[\"of\",{\"1\":{\"58\":1,\"76\":1,\"80\":1}}],[\"omega^i\",{\"1\":{\"20\":1}}],[\"omega^r\",{\"1\":{\"20\":1}}],[\"omega\",{\"1\":{\"20\":4}}],[\"创建结构体的方法\",{\"1\":{\"58\":1}}],[\"创建数组有一些规则\",{\"1\":{\"56\":1}}],[\"创建数组的规则\",{\"0\":{\"56\":1}}],[\"结构体struct\",{\"1\":{\"67\":1}}],[\"结构体\",{\"0\":{\"58\":1},\"1\":{\"58\":1}}],[\"enum\",{\"1\":{\"66\":3}}],[\"enhance\",{\"1\":{\"16\":1}}],[\"else\",{\"1\":{\"64\":1,\"76\":2}}],[\"external空白方程\",{\"1\":{\"66\":1}}],[\"external\",{\"1\":{\"58\":2,\"66\":2,\"68\":1,\"85\":1}}],[\"example\",{\"1\":{\"57\":1,\"58\":2}}],[\"成员\",{\"1\":{\"57\":3}}],[\"x\",{\"1\":{\"56\":4,\"57\":2,\"76\":4}}],[\"github\",{\"1\":{\"86\":1}}],[\"g\",{\"1\":{\"56\":2}}],[\"gpl\",{\"1\":{\"56\":1}}],[\"changeowner\",{\"1\":{\"85\":1,\"87\":2}}],[\"can\",{\"1\":{\"82\":1}}],[\"cannot\",{\"1\":{\"74\":1}}],[\"com\",{\"1\":{\"86\":1}}],[\"comparison\",{\"1\":{\"81\":1}}],[\"conditional\",{\"1\":{\"76\":1}}],[\"constructor\",{\"1\":{\"73\":1,\"83\":2,\"84\":4}}],[\"constant变量初始化之后\",{\"1\":{\"74\":1}}],[\"constant变量必须在声明的时候初始化\",{\"1\":{\"72\":2}}],[\"constant和immutable\",{\"0\":{\"71\":1}}],[\"constant\",{\"0\":{\"72\":1},\"1\":{\"70\":1,\"72\":8,\"74\":1,\"75\":1}}],[\"contracts\",{\"1\":{\"86\":2}}],[\"contract\",{\"1\":{\"56\":1,\"84\":1}}],[\"copy\",{\"1\":{\"58\":1}}],[\"c\",{\"1\":{\"56\":1}}],[\"cdots\",{\"1\":{\"20\":1}}],[\"4\",{\"0\":{\"104\":1,\"124\":1},\"1\":{\"56\":2,\"84\":3}}],[\"0xaa\",{\"1\":{\"72\":1}}],[\"0x0000000000000000000000000000000000000000\",{\"1\":{\"66\":2,\"72\":1}}],[\"0\",{\"1\":{\"56\":3,\"66\":5,\"67\":10,\"76\":7,\"81\":1,\"84\":1}}],[\"下面这个例子会报错\",{\"1\":{\"61\":1}}],[\"下面的合约中\",{\"1\":{\"56\":1}}],[\"下一讲我们将介绍solidity中的哈希表\",{\"1\":{\"59\":1}}],[\"下一篇\",{\"1\":{\"5\":1}}],[\"里面的元素都是uint类型\",{\"1\":{\"56\":1}}],[\"里面所有的元素都是uint8类型\",{\"1\":{\"56\":1}}],[\"而是使用与合约名同名的函数作为构造函数而使用\",{\"1\":{\"84\":1}}],[\"而在插入算法中\",{\"1\":{\"82\":1}}],[\"而\",{\"1\":{\"56\":1,\"61\":1}}],[\"默认就是最小单位的该type\",{\"1\":{\"56\":1}}],[\"90\",{\"0\":{\"78\":1}}],[\"9999999999\",{\"1\":{\"73\":1}}],[\"9\",{\"1\":{\"56\":2,\"73\":1}}],[\"例子\",{\"1\":{\"56\":1,\"60\":1,\"61\":1}}],[\"例如地址\",{\"1\":{\"85\":1}}],[\"例如合约名叫\",{\"1\":{\"84\":1}}],[\"例如初始化合约的owner地址\",{\"1\":{\"84\":1}}],[\"例如\",{\"1\":{\"55\":2,\"56\":1,\"79\":1}}],[\"不断练习\",{\"1\":{\"83\":1}}],[\"不能在合约后更改数值\",{\"1\":{\"70\":1}}],[\"不能用于public函数的参数或返回结果中\",{\"1\":{\"61\":1}}],[\"不能用自定义的结构体\",{\"1\":{\"61\":1}}],[\"不能用byte\",{\"1\":{\"55\":1}}],[\"不变量\",{\"1\":{\"70\":1,\"75\":1}}],[\"不同类型的变量初始值不同\",{\"1\":{\"70\":1}}],[\"不存在字节填充\",{\"1\":{\"55\":1}}],[\"会报underflow错误\",{\"1\":{\"82\":1}}],[\"会编译不通过并抛出typeerror\",{\"1\":{\"74\":2}}],[\"会让\",{\"1\":{\"68\":1}}],[\"会产生额外的gas\",{\"1\":{\"55\":1}}],[\"会使用\",{\"1\":{\"14\":1}}],[\"因为modifier\",{\"1\":{\"87\":1}}],[\"因为mapping记录的是一种关系\",{\"1\":{\"61\":1}}],[\"因为ethereum会定义所有未使用的空间为0\",{\"1\":{\"62\":1}}],[\"因为\",{\"1\":{\"61\":1}}],[\"因为如上所述我们其实是传入了uint8类型的array\",{\"1\":{\"56\":1}}],[\"因为第一个元素指定了是uint类型了\",{\"1\":{\"56\":1}}],[\"因为在solidity中如果一个值没有指定type的话\",{\"1\":{\"56\":1}}],[\"因为bytes1\",{\"1\":{\"55\":1}}],[\"因此更加灵活\",{\"1\":{\"73\":1}}],[\"因此可以利用\",{\"1\":{\"73\":1}}],[\"因此可以用于合约的状态变量\",{\"1\":{\"61\":1}}],[\"因此可以借助于\",{\"1\":{\"14\":1}}],[\"因此\",{\"1\":{\"11\":1}}],[\"便宜\",{\"1\":{\"55\":1}}],[\"另外还有continue\",{\"1\":{\"76\":1}}],[\"另外\",{\"1\":{\"55\":1,\"70\":1}}],[\"注意⚠️\",{\"1\":{\"84\":1}}],[\"注意\",{\"1\":{\"55\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"27\":1}}],[\"动态数组和bytes拥有pop\",{\"1\":{\"57\":1}}],[\"动态数组和bytes拥有push\",{\"1\":{\"57\":2}}],[\"动态数组\",{\"1\":{\"55\":1,\"67\":1}}],[\"可是g函数需要的却是uint类型的array\",{\"1\":{\"56\":1}}],[\"可以用public变量的getter函数验证上面写的初始值是否正确\",{\"1\":{\"66\":1,\"67\":1}}],[\"可以用new操作符来创建\",{\"1\":{\"56\":1}}],[\"可以通过key来查询对应的value\",{\"1\":{\"61\":1}}],[\"可以移除数组最后一个元素\",{\"1\":{\"57\":1}}],[\"可以在数组最后添加一个x元素\",{\"1\":{\"57\":1}}],[\"可以在数组最后添加一个0元素\",{\"1\":{\"57\":1}}],[\"可以使用bytes或bytes1\",{\"1\":{\"55\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"11\":1}}],[\"可变长度\",{\"1\":{\"55\":1}}],[\"可变长度数组\",{\"1\":{\"55\":1}}],[\"5\",{\"1\":{\"55\":1,\"56\":1,\"79\":1,\"81\":1,\"82\":2}}],[\"blob\",{\"1\":{\"86\":1}}],[\"block\",{\"1\":{\"73\":4}}],[\"basic\",{\"1\":{\"83\":1}}],[\"boom\",{\"1\":{\"81\":1}}],[\"bool2变为默认值\",{\"1\":{\"68\":1}}],[\"bool2\",{\"1\":{\"68\":2}}],[\"bool\",{\"1\":{\"66\":2,\"68\":1,\"76\":1}}],[\"boolean\",{\"1\":{\"66\":1}}],[\"buy\",{\"1\":{\"66\":1}}],[\"bytes比bytes1\",{\"1\":{\"55\":1}}],[\"bytes比较特殊\",{\"1\":{\"55\":1}}],[\"bytes\",{\"1\":{\"55\":1,\"56\":2,\"72\":2}}],[\"bytes1\",{\"1\":{\"55\":2}}],[\"be\",{\"1\":{\"28\":1}}],[\"80\",{\"1\":{\"58\":1}}],[\"8\",{\"1\":{\"55\":1,\"67\":1}}],[\"uint256\",{\"1\":{\"58\":2,\"61\":2,\"67\":2,\"72\":1,\"73\":5,\"76\":7}}],[\"uint\",{\"1\":{\"55\":2,\"56\":7,\"60\":1,\"61\":2,\"66\":3,\"67\":3,\"76\":6,\"81\":5,\"82\":6}}],[\"固定长度\",{\"1\":{\"55\":1}}],[\"固定长度数组\",{\"1\":{\"55\":1}}],[\"key和\",{\"1\":{\"61\":1}}],[\"keytype使用了我们自定义的结构体\",{\"1\":{\"61\":1}}],[\"keytype只能选择solidity默认的类型\",{\"1\":{\"61\":1}}],[\"keytype和\",{\"1\":{\"60\":1}}],[\"keytype\",{\"1\":{\"60\":1}}],[\"key\",{\"1\":{\"60\":1,\"61\":4,\"62\":3,\"63\":1,\"80\":3}}],[\"k是长度\",{\"1\":{\"55\":1}}],[\"k\",{\"1\":{\"55\":1}}],[\"用\",{\"0\":{\"77\":1}}],[\"用方括号包着来初始化array的一种方式\",{\"1\":{\"56\":1}}],[\"用t\",{\"1\":{\"55\":2}}],[\"用来存储一组数据\",{\"1\":{\"55\":1}}],[\"在\",{\"1\":{\"87\":1}}],[\"在部署合约的时候\",{\"1\":{\"84\":1}}],[\"在dapp\",{\"1\":{\"82\":1}}],[\"在下面这个例子\",{\"1\":{\"73\":1}}],[\"在solidity\",{\"1\":{\"84\":1}}],[\"在solidity中\",{\"1\":{\"65\":1}}],[\"在solidity里\",{\"1\":{\"56\":1}}],[\"在remix上验证\",{\"0\":{\"63\":1,\"69\":1,\"74\":1}}],[\"在映射中\",{\"1\":{\"60\":1}}],[\"在函数中创建一个storage的struct引用\",{\"1\":{\"58\":1}}],[\"在memory中要增加31个字节进行填充\",{\"1\":{\"55\":1}}],[\"在gas上\",{\"1\":{\"55\":1}}],[\"在声明时不指定数组的长度\",{\"1\":{\"55\":1}}],[\"在声明时指定数组的长度\",{\"1\":{\"55\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"5\":1}}],[\"字节\",{\"1\":{\"55\":1}}],[\"整数\",{\"1\":{\"55\":1}}],[\"数组array\",{\"1\":{\"67\":1}}],[\"数组有一个包含元素数量的length成员\",{\"1\":{\"57\":1}}],[\"数组成员\",{\"0\":{\"57\":1}}],[\"数组字面常数\",{\"1\":{\"56\":1}}],[\"数组分为固定长度数组和可变长度数组两种\",{\"1\":{\"55\":1}}],[\"数组\",{\"0\":{\"55\":1},\"1\":{\"54\":1,\"55\":1}}],[\"sender\",{\"1\":{\"84\":1,\"85\":1}}],[\"sell\",{\"1\":{\"66\":1}}],[\"sol\",{\"1\":{\"86\":1,\"87\":1}}],[\"solidity中最常用的变量类型是uint\",{\"1\":{\"82\":1}}],[\"solidity的控制流与其他语言类似\",{\"1\":{\"76\":1}}],[\"solidity支持通过构造结构体的形式定义新的类型\",{\"1\":{\"58\":1}}],[\"solidity\",{\"1\":{\"56\":1,\"81\":2,\"83\":1,\"84\":1}}],[\"sorting\",{\"1\":{\"81\":1}}],[\"sort\",{\"1\":{\"80\":1,\"81\":1}}],[\"swappair\",{\"1\":{\"60\":1}}],[\"score\",{\"1\":{\"58\":3,\"61\":1,\"67\":1}}],[\"state\",{\"1\":{\"74\":1}}],[\"staticarray\",{\"1\":{\"67\":1}}],[\"string和bytes可以声明为constant\",{\"1\":{\"70\":1}}],[\"string\",{\"1\":{\"66\":3,\"72\":2}}],[\"struct\",{\"0\":{\"54\":1,\"58\":1},\"1\":{\"54\":1,\"58\":1,\"59\":1,\"61\":2,\"67\":1}}],[\"storage\",{\"1\":{\"58\":1}}],[\"student\",{\"1\":{\"58\":11,\"61\":2,\"67\":3}}],[\"spdx\",{\"1\":{\"56\":1}}],[\"sum\",{\"1\":{\"20\":1,\"76\":9}}],[\"access\",{\"1\":{\"86\":1}}],[\"actionset\",{\"1\":{\"66\":2}}],[\"arr\",{\"1\":{\"80\":8}}],[\"array9\",{\"1\":{\"56\":1}}],[\"array8\",{\"1\":{\"56\":1}}],[\"array7\",{\"1\":{\"55\":1}}],[\"array6\",{\"1\":{\"55\":1}}],[\"array5\",{\"1\":{\"55\":1}}],[\"array4\",{\"1\":{\"55\":1}}],[\"array3\",{\"1\":{\"55\":1}}],[\"array2\",{\"1\":{\"55\":1}}],[\"array1\",{\"1\":{\"55\":1}}],[\"array\",{\"0\":{\"54\":1,\"55\":1},\"1\":{\"54\":1,\"55\":3,\"56\":1,\"59\":1}}],[\"and\",{\"1\":{\"76\":1,\"80\":1}}],[\"already\",{\"1\":{\"74\":1}}],[\"a会让变量a的值变为初始值\",{\"1\":{\"68\":1}}],[\"a\",{\"1\":{\"58\":1,\"74\":1,\"81\":8,\"82\":8}}],[\"address等\",{\"1\":{\"61\":1}}],[\"address\",{\"1\":{\"55\":2,\"60\":3,\"61\":1,\"66\":4,\"67\":1,\"72\":2,\"73\":4,\"84\":1,\"85\":1}}],[\"assign\",{\"1\":{\"58\":1,\"74\":1}}],[\"as\",{\"1\":{\"28\":1}}],[\"蔬菜\",{\"2\":{\"52\":1}}],[\"番茄\",{\"0\":{\"49\":1}}],[\"草莓\",{\"0\":{\"44\":1},\"2\":{\"47\":1}}],[\"大\",{\"2\":{\"43\":1,\"93\":1,\"98\":1,\"103\":1,\"108\":1}}],[\"水果\",{\"2\":{\"42\":1,\"47\":1,\"102\":1,\"107\":1,\"112\":1,\"117\":1}}],[\"火龙果\",{\"0\":{\"39\":1},\"2\":{\"42\":1}}],[\"圆\",{\"2\":{\"38\":1,\"53\":1,\"93\":1,\"98\":1,\"103\":1,\"108\":1}}],[\"小\",{\"2\":{\"38\":1,\"48\":1}}],[\"红\",{\"2\":{\"38\":1,\"43\":1,\"48\":1,\"53\":1,\"93\":1,\"98\":1,\"103\":1,\"108\":1}}],[\"3\",{\"0\":{\"36\":1,\"41\":1,\"46\":1,\"51\":1,\"91\":1,\"96\":1,\"99\":1,\"101\":1,\"106\":1,\"111\":1,\"116\":1,\"119\":1,\"121\":1,\"126\":1},\"1\":{\"56\":7,\"63\":1,\"79\":1,\"81\":1,\"82\":2}}],[\"这也是最常用的控制智能合约权限的方法\",{\"1\":{\"85\":1}}],[\"这就是solidity\",{\"1\":{\"83\":1}}],[\"这样的做法能在节省gas的同时提升合约的安全性\",{\"1\":{\"75\":1}}],[\"这里\",{\"1\":{\"82\":1}}],[\"这里int的默认最小单位类型就是uint8\",{\"1\":{\"56\":1}}],[\"这里是内容\",{\"1\":{\"35\":1,\"36\":1,\"40\":1,\"41\":1,\"45\":1,\"46\":1,\"50\":1,\"51\":1,\"90\":1,\"91\":1,\"95\":1,\"96\":1,\"100\":1,\"101\":1,\"105\":1,\"106\":1,\"110\":1,\"111\":1,\"115\":1,\"116\":1,\"120\":1,\"121\":1,\"125\":1,\"126\":1}}],[\"这一讲\",{\"1\":{\"54\":1,\"59\":2,\"64\":1,\"65\":1,\"70\":2,\"75\":2,\"83\":2,\"88\":1}}],[\"这意味着你可以在\",{\"1\":{\"31\":1}}],[\"樱桃\",{\"0\":{\"34\":1},\"2\":{\"37\":1}}],[\"每个合约可以定义一个\",{\"1\":{\"84\":1}}],[\"每个月都有项目因为这些小bug损失几千万甚至上亿美元\",{\"1\":{\"83\":1}}],[\"每个\",{\"1\":{\"31\":1}}],[\"进行引用\",{\"1\":{\"30\":1}}],[\"图片引入\",{\"1\":{\"30\":1}}],[\"图片增强\",{\"0\":{\"22\":1}}],[\"标签为\",{\"1\":{\"29\":1}}],[\"标题\",{\"0\":{\"35\":1,\"36\":1,\"40\":1,\"41\":1,\"45\":1,\"46\":1,\"50\":1,\"51\":1,\"90\":1,\"91\":1,\"95\":1,\"96\":1,\"100\":1,\"101\":1,\"105\":1,\"106\":1,\"110\":1,\"111\":1,\"115\":1,\"116\":1,\"120\":1,\"121\":1,\"125\":1,\"126\":1}}],[\"标题会被视为页面标题\",{\"1\":{\"28\":1}}],[\"标题和页面信息\",{\"1\":{\"8\":1}}],[\"分类为\",{\"1\":{\"29\":1}}],[\"日\",{\"1\":{\"29\":1}}],[\"月\",{\"1\":{\"29\":1}}],[\"年\",{\"1\":{\"29\":1}}],[\"作者设置为\",{\"1\":{\"29\":1}}],[\"的检查语句不满足\",{\"1\":{\"87\":1}}],[\"的例子介绍solidity语言中构造函数\",{\"1\":{\"83\":1}}],[\"的错误\",{\"1\":{\"74\":2}}],[\"的用法\",{\"1\":{\"64\":1}}],[\"的键\",{\"1\":{\"62\":1}}],[\"的资讯\",{\"1\":{\"62\":1}}],[\"的基本用法\",{\"1\":{\"59\":1}}],[\"的格式声明\",{\"1\":{\"55\":2}}],[\"的\",{\"1\":{\"28\":1,\"29\":1}}],[\"without\",{\"1\":{\"81\":1}}],[\"will\",{\"1\":{\"28\":1}}],[\"while\",{\"1\":{\"76\":2,\"80\":1,\"81\":1,\"82\":1}}],[\"whiletest\",{\"1\":{\"76\":1}}],[\"while循环\",{\"1\":{\"76\":2}}],[\"while等\",{\"1\":{\"64\":1}}],[\"what\",{\"1\":{\"73\":2}}],[\"wtfacademy\",{\"1\":{\"83\":1}}],[\"wtf\",{\"1\":{\"72\":1}}],[\"writemap\",{\"1\":{\"61\":1}}],[\"web3\",{\"2\":{\"2\":1}}],[\"https\",{\"1\":{\"86\":1}}],[\"hold\",{\"1\":{\"66\":1}}],[\"hope\",{\"1\":{\"29\":1}}],[\"h1\",{\"1\":{\"28\":2}}],[\"h2o\",{\"1\":{\"23\":1}}],[\"for\",{\"1\":{\"76\":1,\"80\":2,\"81\":1,\"82\":1}}],[\"forlooptest\",{\"1\":{\"76\":1}}],[\"for循环\",{\"1\":{\"76\":1}}],[\"fe\",{\"1\":{\"66\":1}}],[\"fi\",{\"1\":{\"66\":1}}],[\"first\",{\"1\":{\"28\":1}}],[\"false\",{\"1\":{\"66\":2,\"68\":1,\"76\":1}}],[\"f\",{\"1\":{\"56\":1}}],[\"function\",{\"1\":{\"56\":2,\"58\":2,\"61\":1,\"66\":3,\"68\":1,\"73\":1,\"76\":5,\"81\":1,\"82\":1,\"84\":1,\"85\":1}}],[\"frac\",{\"1\":{\"20\":4}}],[\"frontmatter\",{\"1\":{\"5\":1,\"8\":1,\"13\":4,\"28\":1,\"29\":1}}],[\"组件\",{\"0\":{\"24\":1,\"31\":1},\"1\":{\"31\":1}}],[\"上编译部署代码\",{\"1\":{\"87\":1}}],[\"上下角标\",{\"0\":{\"23\":1}}],[\"上一篇\",{\"1\":{\"5\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"22\":1}}],[\"21\",{\"1\":{\"84\":1}}],[\"22版本及之后\",{\"1\":{\"84\":1}}],[\"22之前\",{\"1\":{\"84\":1}}],[\"2020\",{\"1\":{\"29\":1}}],[\"2\",{\"0\":{\"35\":1,\"40\":1,\"45\":1,\"50\":1,\"90\":1,\"94\":1,\"95\":1,\"100\":1,\"105\":1,\"110\":1,\"114\":1,\"115\":1,\"120\":1,\"125\":1},\"1\":{\"21\":1,\"56\":4,\"63\":1,\"79\":1,\"81\":1,\"82\":2}}],[\"计划\",{\"1\":{\"21\":2}}],[\"任务列表\",{\"0\":{\"21\":1}}],[\"range\",{\"1\":{\"80\":1}}],[\"require\",{\"1\":{\"85\":1}}],[\"remix\",{\"0\":{\"87\":1},\"1\":{\"81\":1,\"87\":1}}],[\"return\",{\"1\":{\"73\":1,\"76\":7,\"80\":1,\"81\":1,\"82\":1}}],[\"returns\",{\"1\":{\"73\":1,\"76\":5,\"81\":1,\"82\":1}}],[\"reference\",{\"1\":{\"67\":1}}],[\"regarded\",{\"1\":{\"28\":1}}],[\"r\",{\"1\":{\"20\":3}}],[\"right\",{\"1\":{\"20\":3}}],[\"^\",{\"1\":{\"20\":1}}],[\"^i\",{\"1\":{\"20\":1}}],[\"^r\",{\"1\":{\"20\":2}}],[\"10\",{\"1\":{\"72\":1,\"76\":3,\"114\":1}}],[\"100\",{\"1\":{\"55\":1,\"58\":1}}],[\"11\",{\"1\":{\"58\":1,\"83\":1}}],[\"16\",{\"1\":{\"56\":1}}],[\"19th\",{\"1\":{\"23\":1}}],[\"1\",{\"0\":{\"89\":1,\"109\":1},\"1\":{\"20\":1,\"21\":1,\"29\":2,\"31\":2,\"56\":5,\"58\":1,\"63\":1,\"79\":1,\"80\":3,\"81\":3,\"82\":7}}],[\"implementation\",{\"1\":{\"80\":1}}],[\"immutable变量初始化之后\",{\"1\":{\"74\":1}}],[\"immutable变量可以在constructor里初始化\",{\"1\":{\"73\":1}}],[\"immutable变量可以在声明时或构造函数中初始化\",{\"1\":{\"73\":1}}],[\"immutable\",{\"0\":{\"73\":1},\"1\":{\"73\":11,\"74\":1}}],[\"i++\",{\"1\":{\"76\":3,\"81\":1,\"82\":1}}],[\"i+1\",{\"1\":{\"20\":1}}],[\"ifelsetest\",{\"1\":{\"76\":1}}],[\"if\",{\"1\":{\"76\":3}}],[\"id映射到地址\",{\"1\":{\"60\":1}}],[\"idtoaddress\",{\"1\":{\"60\":1,\"61\":1}}],[\"id\",{\"1\":{\"58\":3,\"61\":1,\"67\":1}}],[\"identifier\",{\"1\":{\"56\":1}}],[\"insertion\",{\"1\":{\"80\":1,\"81\":1}}],[\"insertionsortwrong\",{\"1\":{\"81\":1}}],[\"insertionsort\",{\"1\":{\"75\":1,\"79\":1,\"80\":1,\"82\":1}}],[\"initialized\",{\"1\":{\"74\":1}}],[\"initstudent2\",{\"1\":{\"58\":1}}],[\"initstudent1\",{\"1\":{\"58\":1}}],[\"internal空白方程\",{\"1\":{\"66\":1}}],[\"internal\",{\"1\":{\"66\":2}}],[\"int\",{\"1\":{\"66\":3}}],[\"in\",{\"1\":{\"28\":1,\"80\":1,\"81\":1}}],[\"i\",{\"1\":{\"20\":1,\"31\":1,\"76\":9,\"80\":3,\"81\":3,\"82\":3}}],[\"i=1\",{\"1\":{\"20\":1}}],[\"it\",{\"1\":{\"14\":2}}],[\"+=\",{\"1\":{\"76\":3}}],[\"+\",{\"1\":{\"20\":1,\"31\":1}}],[\"y\",{\"1\":{\"20\":2,\"76\":4}}],[\"y^\",{\"1\":{\"20\":2}}],[\"learning社群一个朋友的帮助下\",{\"1\":{\"82\":1}}],[\"len\",{\"1\":{\"80\":1}}],[\"length\",{\"1\":{\"57\":1,\"81\":1,\"82\":1}}],[\"left\",{\"1\":{\"20\":3}}],[\"license\",{\"1\":{\"56\":1}}],[\"literals\",{\"1\":{\"56\":1}}],[\"log\",{\"1\":{\"20\":2}}],[\"=0\",{\"1\":{\"84\":1}}],[\"==\",{\"1\":{\"76\":1,\"85\":1}}],[\"=>\",{\"1\":{\"60\":3,\"61\":1,\"67\":1}}],[\"=\",{\"1\":{\"20\":1,\"56\":6,\"58\":5,\"61\":2,\"68\":1,\"72\":4,\"73\":5,\"76\":6,\"80\":5,\"81\":4,\"82\":4,\"84\":1,\"85\":1}}],[\"program\",{\"1\":{\"80\":1}}],[\"pragma\",{\"1\":{\"56\":1,\"84\":1}}],[\"python\",{\"1\":{\"80\":1}}],[\"pop\",{\"1\":{\"57\":1}}],[\"push\",{\"1\":{\"57\":2}}],[\"pure\",{\"1\":{\"56\":2,\"73\":1,\"76\":5,\"81\":1,\"82\":1}}],[\"public\",{\"1\":{\"30\":1,\"56\":2,\"60\":2,\"61\":2,\"66\":6,\"67\":4,\"68\":1,\"73\":5,\"76\":5,\"81\":1,\"82\":1,\"84\":1}}],[\"parents\",{\"1\":{\"84\":4}}],[\"partial\",{\"1\":{\"20\":1}}],[\"partial^r\",{\"1\":{\"20\":1}}],[\"pair\",{\"1\":{\"61\":1,\"63\":1}}],[\"page\",{\"1\":{\"28\":1}}],[\"plugin\",{\"1\":{\"16\":1}}],[\"$$\",{\"1\":{\"20\":2}}],[\"tags\",{\"1\":{\"83\":1}}],[\"take\",{\"1\":{\"82\":1}}],[\"to\",{\"1\":{\"74\":1}}],[\"toc\",{\"1\":{\"8\":1}}],[\"that\",{\"1\":{\"82\":1}}],[\"this\",{\"1\":{\"73\":2}}],[\"the\",{\"1\":{\"28\":1,\"76\":1}}],[\"true\",{\"1\":{\"68\":1,\"76\":1}}],[\"types\",{\"1\":{\"67\":1}}],[\"temp\",{\"1\":{\"81\":3,\"82\":3}}],[\"ternarytest\",{\"1\":{\"76\":1}}],[\"ternary\",{\"1\":{\"76\":1}}],[\"test初始化为9\",{\"1\":{\"73\":1}}],[\"test\",{\"1\":{\"73\":4}}],[\"testvar\",{\"1\":{\"61\":1}}],[\"tex\",{\"0\":{\"20\":1}}],[\"title\",{\"1\":{\"28\":3,\"83\":1}}],[\"导入文件\",{\"0\":{\"19\":1}}],[\"导航栏\",{\"1\":{\"5\":1,\"8\":1}}],[\"脚注\",{\"0\":{\"18\":1}}],[\"查看详情\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"选项卡\",{\"0\":{\"17\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"16\":1}}],[\"modifier的主要使用场景是运行函数前的检查\",{\"1\":{\"85\":1}}],[\"modifier\",{\"1\":{\"83\":2,\"85\":2}}],[\"more\",{\"1\":{\"27\":1}}],[\"master\",{\"1\":{\"86\":1}}],[\"max\",{\"1\":{\"76\":1}}],[\"mapping\",{\"1\":{\"59\":2,\"60\":2,\"61\":1,\"64\":1,\"67\":2}}],[\"markdown\",{\"0\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1},\"1\":{\"11\":2,\"12\":3,\"13\":1,\"14\":3,\"15\":2,\"16\":1,\"28\":3,\"29\":1,\"30\":2,\"31\":2},\"2\":{\"26\":1}}],[\"memory数组的长度在创建后是固定的\",{\"1\":{\"57\":1}}],[\"memory\",{\"1\":{\"56\":4,\"81\":2,\"82\":2}}],[\"memory动态数组\",{\"1\":{\"56\":1}}],[\"msg\",{\"1\":{\"84\":1,\"85\":1}}],[\"ms\",{\"1\":{\"29\":1}}],[\"md\",{\"1\":{\"16\":1}}],[\"对于f函数里面的调用\",{\"1\":{\"56\":1}}],[\"对于memory修饰的动态数组\",{\"1\":{\"56\":1}}],[\"对于\",{\"1\":{\"30\":1}}],[\"对\",{\"1\":{\"15\":1}}],[\"为例\",{\"0\":{\"63\":1},\"1\":{\"87\":1}}],[\"为了丰富文档写作\",{\"1\":{\"15\":1}}],[\"为每个\",{\"1\":{\"13\":1}}],[\"内容\",{\"1\":{\"14\":1}}],[\"扩展\",{\"0\":{\"14\":1,\"15\":1},\"1\":{\"15\":1}}],[\"了解详情\",{\"1\":{\"13\":1}}],[\"请使用绝对链接\",{\"1\":{\"30\":1}}],[\"请阅读\",{\"1\":{\"13\":1,\"15\":1}}],[\"请先阅读\",{\"1\":{\"12\":1}}],[\"中使用\",{\"1\":{\"31\":1}}],[\"中设置页面信息\",{\"1\":{\"29\":1}}],[\"中设置页面标题\",{\"1\":{\"28\":1}}],[\"中的第一个\",{\"1\":{\"28\":1}}],[\"中的\",{\"1\":{\"15\":1}}],[\"中很重要的一个概念\",{\"1\":{\"13\":1}}],[\"中自定义它们\",{\"1\":{\"8\":1}}],[\"是solidity特有的语法\",{\"1\":{\"85\":1}}],[\"是solidity常用的一种变量类型\",{\"1\":{\"55\":1}}],[\"是一种特殊的函数\",{\"1\":{\"84\":1}}],[\"是最简单的一种排序算法\",{\"1\":{\"79\":1}}],[\"是会报错的\",{\"1\":{\"56\":1}}],[\"是写作表达式形式的数组\",{\"1\":{\"56\":1}}],[\"是数组\",{\"1\":{\"55\":1}}],[\"是\",{\"1\":{\"13\":1}}],[\"通过remix上的getter函数\",{\"1\":{\"74\":1}}],[\"通过一个人的id来查询他的钱包地址\",{\"1\":{\"60\":1}}],[\"通过\",{\"1\":{\"13\":1,\"16\":1}}],[\"配置\",{\"0\":{\"13\":1}}],[\"演示示例\",{\"0\":{\"87\":1}}],[\"演示\",{\"1\":{\"12\":1}}],[\"和独有的修饰器\",{\"1\":{\"83\":1}}],[\"和break\",{\"1\":{\"76\":1}}],[\"和immutable\",{\"1\":{\"70\":1,\"75\":1}}],[\"和library函数的参数\",{\"1\":{\"61\":1}}],[\"和结构体\",{\"1\":{\"54\":1,\"59\":1}}],[\"和\",{\"1\":{\"12\":1,\"29\":1}}],[\"还不会编写\",{\"1\":{\"12\":1}}],[\"介绍\",{\"0\":{\"12\":1},\"1\":{\"12\":1,\"13\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}],[\"你需要一个一个元素的赋值\",{\"1\":{\"56\":1}}],[\"你需要创建并编写\",{\"1\":{\"11\":1}}],[\"你也可以创建并引入你自己的组件\",{\"1\":{\"31\":1}}],[\"你可以使用全局变量例如address\",{\"1\":{\"73\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"11\":1}}],[\"你可以将图片和\",{\"1\":{\"30\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"30\":1}}],[\"你可以在\",{\"1\":{\"28\":1,\"29\":1}}],[\"你可以在主题选项和页面的\",{\"1\":{\"8\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"5\":1}}],[\"文件夹的图片\",{\"1\":{\"30\":1}}],[\"文件放置在一起使用相对路径进行引用\",{\"1\":{\"30\":1}}],[\"文件生成页面\",{\"1\":{\"11\":1}}],[\"文章标题列表\",{\"1\":{\"8\":1}}],[\"展示\",{\"0\":{\"11\":1}}],[\"指南\",{\"2\":{\"9\":1}}],[\"打印按钮\",{\"1\":{\"8\":1}}],[\"夜间模式按钮\",{\"1\":{\"8\":1}}],[\"主题扩展了更多\",{\"1\":{\"16\":1}}],[\"主题扩展\",{\"0\":{\"16\":1}}],[\"主题也带有以下元素\",{\"1\":{\"8\":1}}],[\"主要包含以下几种\",{\"1\":{\"76\":1}}],[\"主要从\",{\"1\":{\"11\":1}}],[\"主要功能与配置演示\",{\"0\":{\"3\":1}}],[\"同时每个页面包含\",{\"1\":{\"8\":1}}],[\"布局包括\",{\"1\":{\"8\":1}}],[\"布局\",{\"0\":{\"8\":1},\"2\":{\"10\":1}}],[\"布局与功能禁用\",{\"0\":{\"5\":1}}],[\"禁用\",{\"2\":{\"7\":1}}],[\"禁用了如下功能\",{\"1\":{\"5\":1}}],[\"返回顶部按钮\",{\"1\":{\"5\":1,\"8\":1}}],[\"页面都会被转换为一个\",{\"1\":{\"31\":1}}],[\"页面内容\",{\"0\":{\"30\":1}}],[\"页面标题\",{\"0\":{\"28\":1},\"1\":{\"28\":1}}],[\"页面配置\",{\"0\":{\"27\":1},\"1\":{\"29\":1},\"2\":{\"33\":1}}],[\"页面引入配置\",{\"1\":{\"13\":1}}],[\"页面信息\",{\"0\":{\"29\":1},\"1\":{\"5\":1}}],[\"页脚\",{\"1\":{\"5\":1,\"8\":1}}],[\"评论\",{\"1\":{\"5\":1,\"8\":1}}],[\"链接\",{\"1\":{\"5\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"8\":1}}],[\"更新时间\",{\"1\":{\"5\":1}}],[\"贡献者\",{\"1\":{\"5\":1,\"8\":1}}],[\"路径导航\",{\"1\":{\"5\":1,\"8\":1}}],[\"侧边栏\",{\"1\":{\"5\":1,\"8\":1}}],[\"本页面就是一个示例\",{\"1\":{\"5\":1}}],[\"区块链\",{\"0\":{\"1\":1},\"2\":{\"2\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
